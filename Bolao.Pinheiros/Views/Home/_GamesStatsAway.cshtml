@model Bolao.Pinheiros.Models.Root
@if (Model != null && Model.games != null && Model.games.Any())
{
    <div class="game-stats">
        <div class="negrito">Estatísticas - @(Model.mainGame.awayCompetitor.name)</div>
        <br>
        <div class="game-stats-info">
            <div class="team-victory" title="@(string.Join(", ", Model.GetAwayWinningsTeams().Select(x => x.name)))">
                <label class="team negrito">Vitórias</label>
                <label class="team-value">@(Model.GetAwayWinnings().Count())</label>
            </div>
            <div class="team-victory" title="@(string.Join(", ", Model.GetAwayDefeatsTeams().Select(x => x.name)))">
                <label class="team negrito">Derrotas</label>
                <label class="team-value">@(Model.GetAwayDefeats().Count())</label>
            </div>
            <div class="team-draw" title="@(string.Join(", ", Model.GetAwayDrawsTeams().Select(x => x.name)))">
                <label class="team negrito">Empate</label>
                <label class="team-value">@(Model.GetAwayDraws().Count())</label>
            </div>
        </div>
        <div class="game-stats-info">
            <div class="head-head-score">
                <label class="team negrito">Gols</label>
                <label class="team-value">@(Model.GetAwayGamesGoals())</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Média de gols</label>
                <label class="team-value">@(Model.GetAverageGoalsAway())</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Ambos marcaram</label>
                <label class="team-value p-0">
                    @{
                        var bothScored = Model.GetAwayGames().Where(x => x.DidBothTeamScore()).Count();
                    }
                    @(bothScored) jogos - @(((double)bothScored) / ((double)Model.GetAwayGames().Count()) * 100) %
                </label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Ambos não marcaram</label>
                <label class="team-value p-0">
                    @{
                        var bothDidntScore = Model.GetAwayGames().Where(x => !x.DidBothTeamScore()).Count();
                    }
                    @(bothDidntScore) jogos - @(((double)bothDidntScore) / ((double)Model.GetAwayGames().Count()) * 100) %
                </label>
            </div>
        </div>
        <div class="game-stats-info">
            <div class="head-head-score">
                <label class="team negrito">GP @(Model.mainGame.awayCompetitor.name)</label>
                <label class="team-value">@(Model.GetGoalsAwayBetween())</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">GC @(Model.mainGame.awayCompetitor.name)</label>
                <label class="team-value">@(Model.GetGoalsAwayBetween())</label>
            </div>
            <div class="max-score" title="@(Model.GetGreaterAwayScore().ToString())">
                <label class="team negrito">Maior quantidade de gols em um jogo</label>
                <label class="team-value">@(Model.GetMaximumGoalsAway())</label>
            </div>
            <div class="minimum-score" title="@(Model.GetLowerAwayScore().ToString())">
                <label class="team negrito">Menor quantidade de gols em um jogo</label>
                <label class="team-value">@(Model.GetMinimumGoalsAway())</label>
            </div>
        </div>
    </div>
}